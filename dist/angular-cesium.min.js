angular.module("angularCesium",["observableCollection"]),angular.module("angularCesium").service("BillBoardAttributes",["$parse",function(e){this.calcAttributes=function(i,o){var r={image:e(i.image)(o)},n=e(i.position)(o);r.position=Cesium.Cartesian3.fromDegrees(Number(n.latitude)||0,Number(n.longitude)||0,Number(n.altitude)||0);var t=e(i.color)(o);return t&&(r.color=Cesium.Color.fromCssColorString(t)),r}}]),angular.module("angularCesium").factory("Cesium",function(){return Cesium}),angular.module("angularCesium").directive("billboard",["BillBoardAttributes",function(e){return{restrict:"E",require:"^billboardsLayer",link:function(i,o,r,n){var t=e.calcAttributes(r,i),l=n.getBillboardCollection().add(t);i.$on("$destroy",function(){n.getBillboardCollection().remove(l)})}}}]),angular.module("angularCesium").directive("billboardsLayer",["$parse","ObservableCollection","BillBoardAttributes","Cesium",function(e,i,o,r){return{restrict:"E",require:"^map",controller:["$scope","$attrs",function(e,i){this.getBillboardCollection=function(){if(i.observableCollection)throw new Error("cannot get collection if layer is bound to ObservableCollection");return e.collection}}],link:{pre:function(n,t,l,u){if(n.collection=new r.BillboardCollection,l.observableCollection){var c=/\s*([\$\w][\$\w]*)\s+in\s+([\$\w][\$\w]*)/,a=l.observableCollection.match(c),s=a[1],m=e(a[2])(n);if(!m instanceof i)throw new Error("observable-collection must be of type ObservableCollection.");var d=function(e){var i={};i[s]=e;var r=o.calcAttributes(l,i);n.collection.add(r)};angular.forEach(m.getData(),function(e){d(e)}),m.onAdd(d),m.onUpdate(function(){}),m.onRemove(function(e,i){n.collection.remove(n.collection.get(i))})}u.getCesiumWidget().scene.primitives.add(n.collection),n.$on("$destroy",function(){u.getCesiumWidget().scene.primitives.remove(n.collection)})}}}}]),angular.module("angularCesium").directive("complexLayer",function(){return{restrict:"E",require:"^map",compile:function(e){angular.forEach(e.children(),function(e){console.log(e)})}}}),angular.module("angularCesium").directive("label",function(){return{restrict:"E",require:"^labelsLayer",scope:{color:"&",text:"&",position:"&"},link:function(e,i,o,r){var n={},t=e.position();n.position=Cesium.Cartesian3.fromDegrees(Number(t.latitude)||0,Number(t.longitude)||0,Number(t.altitude)||0);var l=e.color();l&&(n.color=l),n.text=e.text();var u=r.getLabelCollection().add(n);e.$on("$destroy",function(){r.getLabelCollection().remove(u)})}}}),angular.module("angularCesium").directive("labelsLayer",function(){return{restrict:"E",require:"^map",scope:{},controller:["$scope",function(e){this.getLabelCollection=function(){return e.collection}}],link:{pre:function(e,i,o,r){e.collection=new Cesium.LabelCollection,r.getCesiumWidget().scene.primitives.add(e.collection),e.$on("$destroy",function(){r.getCesiumWidget().scene.primitives.remove(e.collection)})}}}}),angular.module("angularCesium").directive("map",function(){function e(e){return 2==e?Cesium.SceneMode.SCENE2D:2.5==e?Cesium.SceneMode.COLUMBUS_VIEW:Cesium.SceneMode.SCENE3D}return{restrict:"E",template:'<div> <ng-transclude></ng-transclude> <div class="map-container"></div> </div>',transclude:!0,scope:{dimensions:"@"},controller:["$scope",function(e){this.getCesiumWidget=function(){return e.cesium}}],link:{pre:function(i,o){i.dimensions||(i.dimensions=3),i.cesium=new Cesium.CesiumWidget(o.find("div")[0],{sceneMode:e(i.dimensions)})}}}}),angular.module("angularCesium").directive("webMapServiceLayer",function(){return{restrict:"E",require:"^map",scope:{url:"&",layers:"&"},controller:["$scope",function(){}],link:function(e,i,o,r){var n=new Cesium.WebMapServiceImageryProvider({url:e.url(),layers:e.layers()}),t=r.getCesiumWidget().scene.imageryLayers.addImageryProvider(n);e.$on("$destroy",function(){r.getCesiumWidget().scene.imageryLayers.remove(t)})}}});