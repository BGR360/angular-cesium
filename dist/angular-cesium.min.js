angular.module("angularCesium",["observableCollection"]),angular.module("angularCesium").service("BillBoardAttributes",["$parse",function(e){this.calcAttributes=function(i,o){var n={image:e(i.image)(o)},r=e(i.position)(o);n.position=Cesium.Cartesian3.fromDegrees(Number(r.longitude)||0,Number(r.latitude)||0,Number(r.altitude)||0);var t=e(i.color)(o);return t&&(n.color=Cesium.Color.fromCssColorString(t)),n}}]),angular.module("angularCesium").factory("Cesium",function(){return Cesium}),angular.module("angularCesium").directive("acBillboardsLayer",["$parse","ObservableCollection","BillBoardAttributes","Cesium",function(e,i,o,n){return{restrict:"E",require:"^acMap",controller:["$scope","$attrs",function(e,i){this.getBillboardCollection=function(){if(i.observableCollection)throw new Error("cannot get collection if layer is bound to ObservableCollection");return e.collection}}],link:{pre:function(r,t,l,a){if(r.collection=new n.BillboardCollection,l.observableCollection){var c=/\s*([\$\w][\$\w]*)\s+in\s+([\$\w][\$\w]*)/,u=l.observableCollection.match(c),s=u[1],m=e(u[2])(r);if(!m instanceof i)throw new Error("observable-collection must be of type ObservableCollection.");var d=function(e){var i={};i[s]=e;var n=o.calcAttributes(l,i);r.collection.add(n)};angular.forEach(m.getData(),function(e){d(e)}),m.onAdd(d),m.onUpdate(function(){}),m.onRemove(function(e,i){r.collection.remove(r.collection.get(i))})}a.getCesiumWidget().scene.primitives.add(r.collection),r.$on("$destroy",function(){a.getCesiumWidget().scene.primitives.remove(r.collection)})}}}}]),angular.module("angularCesium").directive("acBillboard",["BillBoardAttributes",function(e){return{restrict:"E",require:"^acBillboardsLayer",link:function(i,o,n,r){var t=e.calcAttributes(n,i),l=r.getBillboardCollection().add(t);i.$on("$destroy",function(){r.getBillboardCollection().remove(l)})}}}]),angular.module("angularCesium").directive("acComplexLayer",["$log",function(e){return{restrict:"E",require:"^acMap",compile:function(i,o){o.observableCollection&&angular.forEach(i.children(),function(o){var n=void 0;"BILLBOARD"===o.tagName?n=angular.element("<billboards-layer></billboards-layer>"):"LABEL"===o.tagName&&(n=angular.element("<labels-layer></labels-layer>")),n?(angular.forEach(o.attributes,function(e){n.attr(e.name,e.value)}),angular.forEach(i[0].attributes,function(e){angular.element(o).attr(e.name)||n.attr(e.name,e.value)}),angular.element(o).replaceWith(n)):(e.warn("Found an unknown child of of complex-layer. Removing..."),angular.element(o).remove())})}}}]),angular.module("angularCesium").directive("acLabel",function(){return{restrict:"E",require:"^acLabelsLayer",scope:{color:"&",text:"&",position:"&"},link:function(e,i,o,n){var r={},t=e.position();r.position=Cesium.Cartesian3.fromDegrees(Number(t.longitude)||0,Number(t.latitude)||0,Number(t.altitude)||0);var l=e.color();l&&(r.color=l),r.text=e.text();var a=n.getLabelCollection().add(r);e.$on("$destroy",function(){n.getLabelCollection().remove(a)})}}}),angular.module("angularCesium").directive("acLabelsLayer",function(){return{restrict:"E",require:"^acMap",scope:{},controller:["$scope",function(e){this.getLabelCollection=function(){return e.collection}}],link:{pre:function(e,i,o,n){e.collection=new Cesium.LabelCollection,n.getCesiumWidget().scene.primitives.add(e.collection),e.$on("$destroy",function(){n.getCesiumWidget().scene.primitives.remove(e.collection)})}}}}),angular.module("angularCesium").directive("acMap",function(){function e(e){return 2==e?Cesium.SceneMode.SCENE2D:2.5==e?Cesium.SceneMode.COLUMBUS_VIEW:Cesium.SceneMode.SCENE3D}return{restrict:"E",template:'<div> <ng-transclude></ng-transclude> <div class="map-container"></div> </div>',transclude:!0,scope:{dimensions:"@"},controller:["$scope",function(e){this.getCesiumWidget=function(){return e.cesium}}],link:{pre:function(i,o){i.dimensions||(i.dimensions=3),i.cesium=new Cesium.CesiumWidget(o.find("div")[0],{sceneMode:e(i.dimensions)})}}}}),angular.module("angularCesium").directive("acPolyline",function(){return{restrict:"E",require:"^acPolylinesLayer",scope:{color:"&",width:"&",positions:"&"},link:function(e,i,o,n){var r={};if(!angular.isDefined(e.positions)||!angular.isFunction(e.positions))throw"Polyline positions must be defined as a function";var t=e.positions();r.positions=[],angular.forEach(t,function(e){r.positions.push(Cesium.Cartesian3.fromDegrees(Number(e.longitude)||0,Number(e.latitude)||0,Number(e.altitude)||0))});var l=Cesium.Color.fromCssColorString("black");angular.isDefined(e.color)&&angular.isFunction(e.color)&&(l=Cesium.Color.fromCssColorString(e.color())),r.material=Cesium.Material.fromType("Color"),r.material.uniforms.color=l,r.width=1,angular.isDefined(e.width)&&angular.isFunction(e.width)&&(r.width=e.width());var a=n.getPolylineCollection().add(r);e.$on("$destroy",function(){n.getPolylineCollection().remove(a)})}}}),angular.module("angularCesium").directive("acPolylinesLayer",function(){return{restrict:"E",require:"^acMap",scope:{},controller:["$scope",function(e){this.getPolylineCollection=function(){return e.collection}}],link:{pre:function(e,i,o,n){e.collection=new Cesium.PolylineCollection,n.getCesiumWidget().scene.primitives.add(e.collection),e.$on("$destroy",function(){n.getCesiumWidget().scene.primitives.remove(e.collection)})}}}}),angular.module("angularCesium").directive("acWebMapServiceLayer",function(){return{restrict:"E",require:"^acMap",scope:{url:"&",layers:"&"},controller:["$scope",function(){}],link:function(e,i,o,n){var r=new Cesium.WebMapServiceImageryProvider({url:e.url(),layers:e.layers()}),t=n.getCesiumWidget().scene.imageryLayers.addImageryProvider(r);e.$on("$destroy",function(){n.getCesiumWidget().scene.imageryLayers.remove(t)})}}});